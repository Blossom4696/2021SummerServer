definitions:
  Controllers.Res:
    properties:
      Code:
        type: integer
      Data:
        type: object
      Msg:
        type: string
    type: object
  Models.Campus:
    properties:
      cid:
        type: integer
      cname:
        type: string
    type: object
  Models.Exercise:
    properties:
      eanswerPath:
        type: string
      eanswerTxt:
        type: string
      edescription:
        type: string
      edifficulty:
        type: string
      egrade:
        type: string
      eid:
        type: integer
      enamePath:
        type: string
      enameTxt:
        type: string
      esubject:
        type: string
      etitle:
        type: string
      etype:
        type: string
      eunit:
        type: string
    type: object
  Models.Student:
    properties:
      cid:
        type: integer
      cname:
        type: string
      sgrade:
        type: string
      sicon:
        type: string
      sid:
        type: integer
      sname:
        type: string
      snickname:
        type: string
      spassword:
        type: string
      sphone:
        type: string
    type: object
  Models.Teacher:
    properties:
      ticon:
        type: string
      tid:
        type: integer
      tname:
        type: string
      tnickname:
        type: string
      tpassword:
        type: string
      tphone:
        type: string
    type: object
  Services.ExerciseField:
    properties:
      edifficulty:
        items:
          type: string
        type: array
      egrade:
        items:
          type: string
        type: array
      esubject:
        items:
          type: string
        type: array
      etype:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      eunit:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
    type: object
host: 159.138.3.194:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a server for sorting wrong problems.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /app/campus/get_all_campus:
    get:
      consumes:
      - application/json
      description: 获取校区列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Controllers.Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/Models.Campus'
                  type: array
              type: object
      summary: 校区列表
      tags:
      - Campus
  /app/exercise/delete_exercise/:id:
    delete:
      consumes:
      - application/json
      description: 删除习题数据
      parameters:
      - description: 习题id
        in: query
        name: Eid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: code":200,"msg":"Delete() success!","data":500001}
          schema:
            $ref: '#/definitions/Controllers.Res'
      summary: 删除习题
      tags:
      - Exercise
  /app/exercise/get_all_exercise:
    get:
      consumes:
      - application/json
      description: 获取习题列表
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Controllers.Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/Models.Exercise'
                  type: array
              type: object
      summary: 习题列表
      tags:
      - Exercise
  /app/exercise/get_all_exercise_field:
    get:
      consumes:
      - application/json
      description: 获取习题列表年级、科目、类型、难度、单元的全部可能的值
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Controllers.Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/Services.ExerciseField'
                  type: array
              type: object
      summary: 获取习题属性值
      tags:
      - Exercise
  /app/exercise/get_exercise:
    get:
      consumes:
      - application/json
      description: 删除习题数据
      parameters:
      - description: 习题id
        in: query
        name: Eid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: code":200,"msg":"Query() success!","data":500001}
          schema:
            $ref: '#/definitions/Controllers.Res'
      summary: 删除习题
      tags:
      - Exercise
  /app/exercise/get_sorted_exercise:
    get:
      consumes:
      - application/json
      description: 获取筛选后的习题列表
      parameters:
      - description: 科目
        in: query
        name: subject
        required: true
        type: string
      - description: 类型
        in: query
        name: type
        required: true
        type: string
      - description: 单元
        in: query
        name: unit
        required: true
        type: string
      - description: 难度
        in: query
        name: difficulty
        required: true
        type: string
      - description: 年级
        in: query
        name: grade
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Controllers.Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/Models.Exercise'
                  type: array
              type: object
      summary: 习题列表筛选
      tags:
      - Exercise
  /app/exercise/insert_exercise:
    post:
      consumes:
      - application/json
      description: 插入习题数据
      parameters:
      - description: 习题数据
        in: body
        name: ExerciseData
        required: true
        schema:
          $ref: '#/definitions/Models.Exercise'
      produces:
      - application/json
      responses:
        "200":
          description: code":200,"msg":"Insert() success!","data":500001}
          schema:
            $ref: '#/definitions/Controllers.Res'
      summary: 插入习题
      tags:
      - Exercise
  /app/exercise/update_exercise/:id:
    put:
      consumes:
      - application/json
      description: 更新习题数据
      parameters:
      - description: 习题数据
        in: body
        name: EnameTxt
        required: true
        schema:
          $ref: '#/definitions/Models.Exercise'
      produces:
      - application/json
      responses:
        "200":
          description: code":200,"msg":"Update() success!","data":500001}
          schema:
            $ref: '#/definitions/Controllers.Res'
      summary: 更改习题
      tags:
      - Exercise
  /app/file/get_audio:
    get:
      consumes:
      - application/json
      description: 下载服务端文件夹中的音频
      parameters:
      - description: 文件路径
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      summary: 获取音频
      tags:
      - File
  /app/file/get_image:
    get:
      consumes:
      - application/json
      description: 下载服务端文件夹中的图片
      parameters:
      - description: 文件路径
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      summary: 获取图片
      tags:
      - File
  /app/file/upload_file:
    post:
      consumes:
      - application/json
      description: 上传客户端发送的文件至本地服务器
      parameters:
      - description: 文件本地路径
        in: formData
        name: dirName
        required: true
        type: string
      produces:
      - application/json
      summary: 上传文件
      tags:
      - File
  /app/student/login:
    get:
      consumes:
      - application/json
      description: 匹配学生密码，若登录成功则返回学生信息
      parameters:
      - description: 用户名
        in: query
        name: username
        required: true
        type: string
      - description: 密码
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Controllers.Res'
            - properties:
                data:
                  $ref: '#/definitions/Models.Student'
              type: object
      summary: 学生登录
      tags:
      - Student
  /app/student/register:
    post:
      consumes:
      - application/json
      description: 根据发送的学生信息注册新用户
      parameters:
      - description: 学生信息
        in: body
        name: StudentData
        required: true
        schema:
          $ref: '#/definitions/Models.Student'
      produces:
      - application/json
      responses:
        "200":
          description: code":200,"msg":"Insert() success!","data":100001}
          schema:
            $ref: '#/definitions/Controllers.Res'
      summary: 学生注册
      tags:
      - Student
  /app/teacher/get_student_list:
    get:
      consumes:
      - application/json
      description: 获取监管校区内的学生信息列表
      parameters:
      - description: 教师id
        in: query
        name: Tid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Controllers.Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/Models.Student'
                  type: array
              type: object
      summary: 获取学生信息列表
      tags:
      - Teacher
  /app/teacher/login:
    get:
      consumes:
      - application/json
      description: 匹配教师密码，若登录成功则返回教师信息
      parameters:
      - description: 用户名
        in: query
        name: username
        required: true
        type: string
      - description: 密码
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Controllers.Res'
            - properties:
                data:
                  $ref: '#/definitions/Models.Teacher'
              type: object
      summary: 教师登录
      tags:
      - Teacher
  /app/test/login:
    get:
      consumes:
      - application/json
      description: 登录test
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Controllers.Res'
      summary: 登录测试
      tags:
      - Test
  /app/today/get_today_exercise:
    get:
      consumes:
      - application/json
      description: 获取今日习题列表
      parameters:
      - description: 学生id
        in: query
        name: Sid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/Controllers.Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/Models.Exercise'
                  type: array
              type: object
      summary: 今日习题列表
      tags:
      - TodayExercise
swagger: "2.0"
